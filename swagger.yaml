swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions:
    get:
      summary: Retrieve all transactions for the current month
      description: Returns a list of all transactions for the current month.
      produces:
        - application/json
      responses:
        "200":
          description: A list of transactions for the current month
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
    post:
      summary: Add a new transaction
      description: Creates a new transaction with the provided information.
      parameters:
        - in: body
          name: transaction
          description: The transaction object to be created
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "201":
          description: The newly created transaction
          schema:
            $ref: "#/definitions/Transaction"

  /transactions/{transactionId}:
    get:
      summary: Retrieve additional details of a transaction
      description: Returns additional details of the specified transaction.
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction to retrieve details for
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Additional details of the transaction
          schema:
            $ref: "#/definitions/Transaction"
    put:
      summary: Update additional information about a transaction
      description: Updates the additional information of the specified transaction.
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction to update
          required: true
          type: integer
        - in: body
          name: transaction
          description: The updated transaction object
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: The updated transaction
          schema:
            $ref: "#/definitions/Transaction"
    delete:
      summary: Remove additional information about a transaction
      description: Removes the additional information of the specified transaction.
      parameters:
        - in: path
          name: transactionId
          description: The ID of the transaction to remove
          required: true
          type: integer
      responses:
        "204":
          description: Transaction information successfully removed

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Transaction:
    type: object
    properties:
      id:
        type: integer
      amount:
        type: number
      description:
        type: string
      additionalInfo:
        type: string
      subTransactions:
        type: array
        items:
          $ref: "#/definitions/SubTransaction"

  SubTransaction:
    type: object
    properties:
      date:
        type: string
        description: date of the sub transaction
      description:
        type: string
        description: description of the sub transaction
      amount:
        type: number
        description: amount of the sub transaction
      balance:
        type: number
        description: balance after the sub transaction
      transactionType:
        type: string
        description: type of the sub transaction
      category:
        type: string
        description: category of the sub transaction
      notes:
        type: string
        description: additional notes for the sub transaction
